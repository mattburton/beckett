@using System.Web
@inherits HtmlTemplate<RetryPage.ViewModel>

@{
  Layout = new Layout();
}

<div class="p-2 text-bg-light">
  <ul class="nav nav-pills">
    <li class="nav-item">
      <a class="nav-link" href="@Routes.Prefix/subscriptions">Subscriptions</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="@Routes.Prefix/subscriptions/lagging">Lagging</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="@Routes.Prefix/subscriptions/retries">Retries</a>
    </li>
    <li class="nav-item">
      <a class="nav-link" href="@Routes.Prefix/subscriptions/failed">Failed</a>
    </li>
  </ul>
</div>

<div id="retry-details"
     hx-get="@Routes.Prefix/subscriptions/retries/@Model.Details.Id"
     hx-trigger="every 10s"
     hx-select="#retry-details"
     hx-swap="outerHTML">
  <div class="card m-4">
    <div class="card-header">
      <div class="d-flex justify-content-between align-items-center">
        <div class="fs-3">Status: @Model.Details.Status.ToRetryStatus()</div>
        @if (Model.Details.Status != GetRetryDetailsResult.RetryStatus.Success)
        {
          <div>
            <a href="#"
               class="btn btn-primary"
               title="Request manual retry"
               hx-post="@Routes.Prefix/subscriptions/retries/@Model.Details.Id/manual-retry"
               hx-on::after-request="alert('Manual retry requested')">
              Retry
            </a>
            <a href="#"
               class="btn btn-danger"
               title="Request delete"
               hx-delete="@Routes.Prefix/subscriptions/retries/@Model.Details.Id"
               hx-on::after-request="alert('Delete requested')">
              Delete
            </a>
          </div>
        }
      </div>
    </div>
    <ul class="list-group list-group-flush">
      <li class="list-group-item">Application: @Model.Details.GroupName</li>
      <li class="list-group-item">Subscription: @Model.Details.SubscriptionName</li>
      <li class="list-group-item">
        Stream:
        @if (Routes.Options.MessageStoreEnabled)
        {
          <a href="@Routes.Prefix/message-store/categories/@Model.Details.StreamCategory/@Model.Details.StreamName">
            @Model.Details.StreamName
          </a>
        }
        else
        {
          @Model.Details.StreamName
        }
      </li>
      <li class="list-group-item">
        Stream Position:
        @if (Routes.Options.MessageStoreEnabled)
        {
        <a href="@Routes.Prefix/message-store/streams/@HttpUtility.UrlEncode(Model.Details.StreamName)/@Model.Details.StreamPosition">
          @Model.Details.StreamPosition
        </a>
        }
        else
        {
          @Model.Details.StreamPosition
        }
      </li>
      <li class="list-group-item">Attempts: @Model.Details.Attempts.Count</li>
    </ul>
  </div>

  @if (Model.Details.Exception != null)
  {
    <div class="card m-4">
      <div class="card-header d-flex justify-content-between align-items-center text-bg-danger bg-opacity-10 text-dark">
        <div>Error</div>
        <div>@Model.Details.StartedAt</div>
      </div>
      @if (Model.Details.Exception != null)
      {
        <div class="card-body">
          @(new Exception((Model.Details.Exception, true)))
        </div>
      }
    </div>
  }

  @foreach(var attempt in Model.Details.Attempts)
  {
    <div class="card m-4">
      <div class="card-header d-flex justify-content-between align-items-center @(attempt.Success ? "text-bg-success" : "text-bg-danger") bg-opacity-10 text-dark">
        <div>@attempt.Status.ToAttemptStatus()</div>
        <div>@attempt.Timestamp</div>
      </div>
      @if (attempt.Exception != null)
      {
        <div class="card-body">
          @(new Exception((attempt.Exception, true)))
        </div>
      }
    </div>
  }
</div>
