<dl>
  <dt>
    @if (First)
    {
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle"
           viewBox="0 0 16 16">
        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"/>
        <path
          d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
      </svg>
    }
    else
    {
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
           class="bi bi-arrow-return-right" viewBox="0 0 16 16">
        <path fill-rule="evenodd"
              d="M1.5 1.5A.5.5 0 0 0 1 2v4.8a2.5 2.5 0 0 0 2.5 2.5h9.793l-3.347 3.346a.5.5 0 0 0 .708.708l4.2-4.2a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708.708L13.293 8.3H3.5A1.5 1.5 0 0 1 2 6.8V2a.5.5 0 0 0-.5-.5"/>
      </svg>
    }
    @Exception.Type
  </dt>
  <dd>Message: @Exception.Message</dd>
  @if (Exception.StackTrace?.Count > 0)
  {
    <dd>
      Stack Trace:
      <dl>
        @foreach (var line in Exception.StackTrace)
        {
          <dd>@line</dd>
        }
      </dl>
    </dd>
  }
  @if (Exception.InnerException != null)
  {
    <dd>
      <ErrorDetails Exception="Exception.InnerException"></ErrorDetails>
    </dd>
  }
</dl>

@code {

  [Parameter, EditorRequired]
  public required ExceptionData Exception { get; set; }

  [Parameter]
  public bool First { get; set; }

}
