@using Beckett.Dashboard.Metrics
@using Beckett.Database
@layout Layout
@inject IPostgresDatabase Database

<div id="metrics" class="row mt-4 mx-2" hx-get="@Dashboard.Prefix/" hx-trigger="every 10s" hx-select="#metrics"
     hx-swap="outerHTML">
  <div class="col-sm-4 mb-3 mb-sm-0">
    <div class="card">
      <div class="card-header">
        Subscription Lag
      </div>
      <div class="card-body d-flex align-items-center justify-content-center h-25">
        <h3>@Model?.Lagging</h3>
      </div>
    </div>
  </div>
  <div class="col-sm-4">
    <div class="card">
      <div class="card-header">
        Retries
      </div>
      <div class="card-body d-flex align-items-center justify-content-center h-25">
        <h3>@Model?.Retries</h3>
      </div>
    </div>
  </div>
  <div class="col-sm-4">
    <div class="card">
      <div class="card-header">
        Failed
      </div>
      <div class="card-body d-flex align-items-center justify-content-center h-25">
        <h3>@Model?.Failed</h3>
      </div>
    </div>
  </div>
</div>

@code {

  private ViewModel? Model { get; set; }

  public record ViewModel(long Lagging, long Retries, long Failed);

  protected override async Task OnInitializedAsync()
  {
    var result = await Database.Execute(new MetricsQuery(), CancellationToken.None);

    Model = new ViewModel(result.Lagging, result.Retries, result.Failed);
  }

}
